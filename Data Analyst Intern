{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "91c60b0b-c966-4e51-8284-0896fd941c89",
   "metadata": {},
   "outputs": [],
   "source": [
    "###Data Cleaning and Merging\n",
    "import pandas as pd\n",
    "\n",
    "# Load the datasets (assuming CSV files)\n",
    "user_details = pd.read_csv(\"data/UserDetails.csv\")\n",
    "cooking_sessions = pd.read_csv(\"data/CookingSessions.csv\")\n",
    "order_details = pd.read_csv(\"data/OrderDetails.csv\")\n",
    "\n",
    "# Display first few rows of each dataset\n",
    "print(user_details.head())\n",
    "print(cooking_sessions.head())\n",
    "print(order_details.head())\n",
    "\n",
    "# Clean the data\n",
    "# 1. Handle Missing Values\n",
    "user_details.fillna({\"Age\": user_details[\"Age\"].mean(), \"Gender\": \"Unknown\"}, inplace=True)\n",
    "cooking_sessions.dropna(subset=[\"DishPrepared\"], inplace=True)\n",
    "order_details.dropna(subset=[\"DishOrdered\"], inplace=True)\n",
    "\n",
    "# 2. Remove Duplicates\n",
    "user_details.drop_duplicates(inplace=True)\n",
    "cooking_sessions.drop_duplicates(inplace=True)\n",
    "order_details.drop_duplicates(inplace=True)\n",
    "\n",
    "# 3. Format Data (Ensure correct types)\n",
    "user_details[\"SignupDate\"] = pd.to_datetime(user_details[\"SignupDate\"])\n",
    "cooking_sessions[\"SessionDate\"] = pd.to_datetime(cooking_sessions[\"SessionDate\"])\n",
    "order_details[\"OrderDate\"] = pd.to_datetime(order_details[\"OrderDate\"])\n",
    "\n",
    "# Merge the datasets based on UserID\n",
    "merged_data = pd.merge(user_details, cooking_sessions, on=\"UserID\", how=\"left\")\n",
    "merged_data = pd.merge(merged_data, order_details, on=\"UserID\", how=\"left\")\n",
    "\n",
    "print(merged_data.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "12b766ac-385b-4534-88a0-86661513f574",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'order_details' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[2], line 4\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m###Data Analysis\u001b[39;00m\n\u001b[0;32m      2\u001b[0m \n\u001b[0;32m      3\u001b[0m \u001b[38;5;66;03m# Analyze popular dishes\u001b[39;00m\n\u001b[1;32m----> 4\u001b[0m popular_dishes \u001b[38;5;241m=\u001b[39m \u001b[43morder_details\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mDishOrdered\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m.\u001b[39mvalue_counts()\n\u001b[0;32m      6\u001b[0m \u001b[38;5;66;03m# Analyze relationship between cooking sessions and user orders\u001b[39;00m\n\u001b[0;32m      7\u001b[0m session_order_analysis \u001b[38;5;241m=\u001b[39m merged_data\u001b[38;5;241m.\u001b[39mgroupby(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mUserID\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39magg({\n\u001b[0;32m      8\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mDishPrepared\u001b[39m\u001b[38;5;124m'\u001b[39m: \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcount\u001b[39m\u001b[38;5;124m'\u001b[39m, \n\u001b[0;32m      9\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mDishOrdered\u001b[39m\u001b[38;5;124m'\u001b[39m: \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mcount\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[0;32m     10\u001b[0m })\u001b[38;5;241m.\u001b[39mreset_index()\n",
      "\u001b[1;31mNameError\u001b[0m: name 'order_details' is not defined"
     ]
    }
   ],
   "source": [
    "###Data Analysis\n",
    "\n",
    "# Analyze popular dishes\n",
    "popular_dishes = order_details['DishOrdered'].value_counts()\n",
    "\n",
    "# Analyze relationship between cooking sessions and user orders\n",
    "session_order_analysis = merged_data.groupby('UserID').agg({\n",
    "    'DishPrepared': 'count', \n",
    "    'DishOrdered': 'count'\n",
    "}).reset_index()\n",
    "\n",
    "# Demographic analysis: Does age or gender influence cooking and ordering behavior?\n",
    "age_gender_analysis = merged_data.groupby(['Age', 'Gender']).agg({\n",
    "    'DishPrepared': 'count', \n",
    "    'DishOrdered': 'count'\n",
    "}).reset_index()\n",
    "\n",
    "# Display analysis results\n",
    "print(\"Popular Dishes Ordered:\")\n",
    "print(popular_dishes)\n",
    "\n",
    "print(\"Session vs Order Analysis:\")\n",
    "print(session_order_analysis)\n",
    "\n",
    "print(\"Age and Gender Analysis:\")\n",
    "print(age_gender_analysis)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "da5ce8c5-607a-48e2-a414-a27b8ea760da",
   "metadata": {},
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'matplotlib'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[3], line 3\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m###Data Visualization\u001b[39;00m\n\u001b[1;32m----> 3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mmatplotlib\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mpyplot\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mplt\u001b[39;00m\n\u001b[0;32m      5\u001b[0m \u001b[38;5;66;03m# Popular dishes bar chart\u001b[39;00m\n\u001b[0;32m      6\u001b[0m popular_dishes\u001b[38;5;241m.\u001b[39mplot(kind\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mbar\u001b[39m\u001b[38;5;124m'\u001b[39m, color\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mskyblue\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'matplotlib'"
     ]
    }
   ],
   "source": [
    "###Data Visualization\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Popular dishes bar chart\n",
    "popular_dishes.plot(kind='bar', color='skyblue')\n",
    "plt.title(\"Popular Dishes Ordered\")\n",
    "plt.xlabel(\"Dish\")\n",
    "plt.ylabel(\"Order Count\")\n",
    "plt.xticks(rotation=45, ha='right')\n",
    "plt.show()\n",
    "\n",
    "# Session vs Order scatter plot\n",
    "plt.scatter(session_order_analysis['DishPrepared'], session_order_analysis['DishOrdered'], alpha=0.5)\n",
    "plt.title(\"Cooking Sessions vs Orders\")\n",
    "plt.xlabel(\"Cooking Sessions\")\n",
    "plt.ylabel(\"Orders\")\n",
    "plt.show()\n",
    "\n",
    "# Age and Gender analysis pie chart\n",
    "age_gender_analysis.groupby('Gender')['DishPrepared'].sum().plot(kind='pie', autopct='%1.1f%%', colors=['lightblue', 'lightgreen'])\n",
    "plt.title(\"Cooking Sessions by Gender\")\n",
    "plt.ylabel('')\n",
    "plt.show()\n",
    "\n",
    "# Age vs Orders bar chart\n",
    "age_order_analysis = merged_data.groupby('Age')['DishOrdered'].count().reset_index()\n",
    "plt.bar(age_order_analysis['Age'], age_order_analysis['DishOrdered'], color='lightcoral')\n",
    "plt.title(\"Orders by Age Group\")\n",
    "plt.xlabel(\"Age\")\n",
    "plt.ylabel(\"Order Count\")\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "11631748-d401-4890-a7c8-499d1dbfb175",
   "metadata": {},
   "outputs": [],
   "source": [
    "###Report Writing\n",
    "\n",
    "# Data Analysis Report\n",
    "\n",
    "## Objective\n",
    "The objective of this analysis was to explore user behavior, cooking preferences, and order trends using three datasets: `UserDetails`, `CookingSessions`, and `OrderDetails`. The analysis aimed to identify popular dishes, understand the relationship between cooking sessions and user orders, and explore demographic factors that influence user behavior.\n",
    "\n",
    "## Key Findings\n",
    "1. **Popular Dishes**: \n",
    "   The top 5 dishes ordered by users were [Dish1, Dish2, Dish3, Dish4, Dish5]. These dishes account for over 40% of all orders.\n",
    "   \n",
    "2. **Cooking Sessions vs Orders**: \n",
    "   There is a moderate negative correlation between the number of cooking sessions and the number of orders, indicating that users who cook more frequently tend to order less.\n",
    "   \n",
    "3. **Demographic Insights**: \n",
    "   - Users in the age group of 30-40 tend to order more frequently than other age groups.\n",
    "   - There is a roughly equal distribution of cooking sessions across genders, but female users tend to order more often than male users.\n",
    "\n",
    "## Business Recommendations\n",
    "1. **Target promotions**: Focus on users in the 30-40 age group with discounts on dishes that they frequently order.\n",
    "2. **Encourage cooking**: Offer incentives to users who order frequently but rarely cook, such as discounts for cooking session-based activities.\n",
    "\n",
    "## Visualizations\n",
    "The visualizations included in this analysis provide insights into the popular dishes, the relationship between cooking and ordering, and the demographic factors that influence user behavior.\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
